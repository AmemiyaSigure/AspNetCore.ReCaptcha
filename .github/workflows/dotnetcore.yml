name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: ./.sonar/scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      run: dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
    - name: SonarCloud setup
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./.sonar/scanner/dotnet-sonarscanner begin /k:"michaelvs97_AspNetCore.ReCaptcha" /o:"michaelvs97" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal --collect 'XPlat Code Coverage' --settings coveralls.runsettings
    - name: SonarCloud analyse
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
    - run: |
        mkdir TestResults
        mv */TestResults/*/coverage.info TestResults/.
    - name: Publish Code Coverage
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./TestResults/coverage.info
    - name: Publish NuGet
      id: publish_nuget
      if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: brandedoutcast/publish-nuget@v2.5.5
      with:
        PROJECT_FILE_PATH: AspNetCore.ReCaptcha/AspNetCore.ReCaptcha.csproj
        PACKAGE_NAME: AspNetCore.ReCaptcha
      env:
        NUGET_KEY: ${{ secrets.NUGET_KEY }}
    - name: Create release
      id: create_release
      if: success() && steps.publish_nuget.outputs.version != ''
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.publish_nuget.outputs.version }}
        release_name: ${{ steps.publish_nuget.outputs.version }}
        body: ""
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
